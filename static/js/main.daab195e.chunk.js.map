{"version":3,"sources":["components/home/faqs.tsx","components/home/features.tsx","components/home/homecard.tsx","components/navbar/navigationbar.tsx","routes/home.tsx","state/action-creators/index.tsx","state/reducers/todosReducer.tsx","state/reducers/index.tsx","components/todos/sideBarTodo.tsx","components/todos/StatsTodo.tsx","components/todos/viewTodo.tsx","routes/todos.tsx","routes/notes.tsx","App.tsx","reportWebVitals.ts","state/store/store.tsx","index.tsx"],"names":["Faqs","Container","id","Accordion","Item","eventKey","Header","Body","features","className","Row","Col","md","span","offset","Card","Title","Text","to","Button","variant","homecard","style","fontSize","marginLeft","marginTop","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","withRouter","readTodos","mystorage","window","localStorage","todolist","Completed","JSON","parse","getItem","Inprogress","selected","dispatch","type","payload","addTodo","todo","push","setItem","stringify","deleteTodo","todoid","console","log","filter","ele","index","doneTodo","toggleSideBar","toggler","INITIAL_STATE","todoReducer","state","action","reducers","combineReducers","SideBarTodo","useState","Date","startDate","setStartDate","String","setTitle","Description","setDescription","show","setShow","handleClose","useDispatch","bindActionCreators","actionCreators","globalstate","useSelector","pushtodb","yourDate","yourTitle","yourDescription","Modal","onHide","closeButton","Form","Group","controlId","Control","placeholder","onChange","event","todoTitle","target","value","date","as","rows","todoDescription","Footer","onClick","Badge","length","height","StatsTodo","useEffect","percentage","Math","round","Number","isInteger","getPercentage","ViewTodos","setTodolist","map","Element","xs","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daab195e.chunk.js","sourcesContent":["import {Accordion, Container} from 'react-bootstrap';\nimport \"../styles/faqsStyles.css\";\n\nfunction Faqs():JSX.Element {\n    return(\n        <Container id=\"faqclass\">\n        <div id=\"faqtitle\">\n            <h1>F.A.Qs</h1>\n        </div>\n        <Accordion >\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header> What can WorkDesk help you with? </Accordion.Header>\n                    <Accordion.Body>\n                        WorkDesk lets you create ToDos and Notes.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header> How to create a Todo? </Accordion.Header>\n                    <Accordion.Body>\n                        Go to the Todo page and use the create button to create a Todo task.\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header> How to create a Notes? </Accordion.Header>\n                    <Accordion.Body>\n                        Go to the Notes page and use the add button to add a new Note.\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            </Container>\n    )\n}\n\nexport default Faqs;","import {Card,Button, Container, Row,Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport \"../styles/featuresStyles.css\"\n\nfunction features():JSX.Element {\n    return(\n        <div className=\"featuresclass\">\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md={{ span: 3, offset: 0 }}>\n                    <Card className=\"featurecard\">\n                        <Card.Title > TODO</Card.Title>\n                        <Card.Text >\n                                Create your own Todo list to keep a track on your tasks.\n                        </Card.Text>\n                            <Link to=\"/todos\" id=\"featurebutton\">\n                                <Button variant=\"primary\">\n                                Get Started\n                                </Button>\n                            </Link>\n                    </Card>\n                </Col>\n                <Col md={{ span: 3, offset: 3 }}>\n                    <Card className=\"featurecard\">\n                        <Card.Title >  NOTES</Card.Title>\n                        <Card.Text >\n                                Store long notes to keep everything at one place.\n                        </Card.Text>\n                            <Link to=\"/notes\" id=\"featurebutton\">\n                                <Button variant=\"primary\">\n                                Get Started\n                                </Button>\n                            </Link>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n    )\n}\n\nexport default features;","import {Card,} from 'react-bootstrap';\nimport \"../styles/homecardStyles.css\";\n\nfunction homecard():JSX.Element {\n    return(\n        <Card className=\"homecard\">\n            <Card.Title className=\"title\">WorkDesk</Card.Title>\n                <Card.Text style={{fontSize:'30px',marginLeft:'140px',marginTop:'10px'}}>\n                        Your own notebook on your Desktop.\n                </Card.Text>\n        </Card>\n    )\n}\n\nexport default homecard;","import {Navbar,Nav} from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container'\n\nfunction NavigationBar():JSX.Element {\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"/\" style={{fontSize:\"25px\"}}>WorkDesk</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                </Nav>\n                <Nav>\n                    <Nav.Link href=\"/todos\">Todos</Nav.Link>\n                    <Nav.Link href=\"/notes\">Notes</Nav.Link>\n                </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavigationBar;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Faqs from \"../components/home/faqs\";\nimport Features from '../components/home/features';\nimport Homecard from \"../components/home/homecard\";\nimport NavigationBar from \"../components/navbar/navigationbar\";\n\nfunction Home():JSX.Element {\n    return(\n        <div>\n            <NavigationBar/>\n            <Homecard/>\n            <Features/>\n            <Faqs/>\n        </div>\n            \n    )\n}\n\nexport default withRouter(Home);","import { Dispatch } from \"redux\";\nimport { TodoInterface } from \"../interfaces/interfaces\";\n\nexport const readTodos = () =>{\n\n    var mystorage = window.localStorage;\n    var Completed = JSON.parse(mystorage.getItem(\"completed\")|| \"[]\");\n    var Inprogress = JSON.parse(mystorage.getItem(\"inprogress\")||\"[]\");\n\n    var todolist={\n        Completed:Completed,\n        Inprogress:Inprogress,\n        selected:1\n    }\n\n\n    return (dispatch:Dispatch) =>{\n        dispatch({\n            type:\"readTodo\",\n            payload:todolist\n        })\n    }\n}\n\nexport const addTodo = (todo:TodoInterface) =>{\n\n    var mystorage = window.localStorage;\n    var Inprogress = JSON.parse(mystorage.getItem(\"inprogress\")|| \"[]\");\n    Inprogress.push(todo);\n    mystorage.setItem('inprogress',JSON.stringify(Inprogress))\n\n    var todolist={\n        Completed:Inprogress,\n        Inprogress:Inprogress,\n        selected:1\n    }\n\n    return (dispatch:Dispatch) => {\n        dispatch({\n            type:\"addTodo\",\n            payload:todolist\n        })\n    }\n}\n\nexport const deleteTodo = (todoid:number) =>{\n\n    console.log(\"Inside DeleteTodos\")\n\n    var mystorage = window.localStorage;\n    var Inprogress = JSON.parse(mystorage.getItem(\"inprogress\")|| \"[]\");\n\n    Inprogress = Inprogress.filter(function(ele:TodoInterface,index:number){\n        if(index!==todoid)\n            return ele\n    })\n\n    var todolist={\n        Completed:Inprogress,\n        Inprogress:Inprogress,\n        selected:1\n    }\n\n\n    mystorage.setItem('inprogress',JSON.stringify(Inprogress))\n\n    return (dispatch:Dispatch) => {\n        dispatch({\n            type:\"deleteTodo\",\n            payload:todolist\n        })\n    }\n}\n\nexport const doneTodo = (todoid:number) =>{\n\n    var mystorage = window.localStorage;\n    var Completed = JSON.parse(mystorage.getItem(\"completed\")|| \"[]\");\n    var Inprogress = JSON.parse(mystorage.getItem(\"inprogress\")|| \"[]\");\n\n\n    Completed.push(Inprogress[todoid])\n\n\n    Inprogress =Inprogress.filter(function(ele:TodoInterface,index:number){\n        if(index!==todoid)\n            return ele\n    })\n\n    var todolist={\n        Completed:Completed,\n        Inprogress:Inprogress,\n        selected:1\n    }\n\n    mystorage.setItem('inprogress',JSON.stringify(Inprogress))\n    mystorage.setItem('completed',JSON.stringify(Completed))\n\n\n    return (dispatch:Dispatch) => {\n        dispatch({\n            type:\"doneTodo\",\n            payload:todolist\n        })\n    }\n}\n\nexport const toggleSideBar = (toggler:number) =>{\n    var mystorage = window.localStorage;\n    var Inprogress = JSON.parse(mystorage.getItem(\"inprogress\")||\"[]\");\n    var Completed = JSON.parse(mystorage.getItem(\"completed\")|| \"[]\");\n\n    var todolist={\n        Completed:Completed,\n        Inprogress:Inprogress,\n        selected:toggler\n    }\n    console.log(\"Inside toggleSideBar\")\n    console.log(todolist)\n    return (dispatch:Dispatch) => {\n        dispatch({\n            type:\"toggleSidebar\",\n            payload:todolist\n        })\n    }\n}","import { stateInterface,readActionInterface } from \"../interfaces/interfaces\";\n\ntype Action = readActionInterface \n\nconst INITIAL_STATE={\n    Completed:[],\n    Inprogress:[],\n    selected:1\n}\n\nconst todoReducer = (state:stateInterface = INITIAL_STATE, action: Action) =>{\n    switch(action.type){\n        case \"readTodo\":\n            return {\n                ...state,\n                Completed:action.payload.Completed,\n                Inprogress:action.payload.Inprogress\n            };\n        case \"addTodo\":\n            return {\n                ...state,\n                Inprogress:action.payload.Inprogress\n            };\n        case \"deleteTodo\":\n            return {\n                ...state,\n                Inprogress:action.payload.Inprogress\n            };\n        case \"doneTodo\":\n            return {\n                ...state,\n                Completed:action.payload.Completed,\n                Inprogress:action.payload.Inprogress\n            };\n        case \"toggleSidebar\":\n            return{\n                ...state,\n                selected:action.payload.selected\n            }\n        default:\n            return state;\n    }\n}\n\nexport default todoReducer;","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todosReducer\";\n\nconst reducers = combineReducers({\n    todo: todoReducer\n});\n\nexport default reducers;\n\nexport type State = ReturnType<typeof reducers>","import  { useState } from \"react\";\nimport { Modal,Button,Form,Col,Row } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport Badge from 'react-bootstrap/Badge';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../styles/createTodoStyles.css\"\nimport { actionCreators,State } from \"../../state/state\";\n\nexport const SideBarTodo = ():JSX.Element => {\n\n  const [startDate, setStartDate] = useState(new Date());\n  // eslint-disable-next-line\n  const [Title,setTitle] = useState(new String);\n  // eslint-disable-next-line\n  const [Description,setDescription] = useState(new String);\n  // eslint-disable-next-line\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const Datesetter =(todoDate:any) =>{\n    setStartDate(todoDate);\n  };\n\n  const Titlesetter = (todoTitle:any) =>{\n    setTitle(todoTitle);\n  };\n\n  const Descriptionsetter = (todoDescription:any) =>{\n    setDescription(todoDescription);\n  };\n\n  const saveButton =() =>{\n    pushtodb(startDate,Title,Description);\n  }\n\n  //REDUX starts here\n  const dispatch = useDispatch();\n  const {addTodo,toggleSideBar} =bindActionCreators(actionCreators,dispatch);\n  const globalstate = useSelector((state:State) => state.todo)\n\n  const pushtodb=(yourDate:any,yourTitle:any,yourDescription:any) =>{\n\n    if(yourDate!==\"\" || yourTitle!==\"\" || yourDescription!==\"\" )\n      {  \n          const Todo = {\n            Title:Title,\n            Description:Description,\n            Date:startDate,\n            Completed:false\n          }  \n\n          addTodo(Todo)\n          handleClose()\n      }\n      else{\n          console.log(\"Please make sure every field is filled.\")\n      }\n  };\n\n\n\n  return (\n      <div>\n        <Row className=\"todoHeader\">\n        <h1> Todos </h1>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>TODO</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Row>\n                <Col>\n                  <Form.Control type=\"textarea\" placeholder=\"Your title goes here\" onChange={(event)=>{Titlesetter(event.target.value)}} />\n                </Col>\n                <Col>\n                  <DatePicker selected={startDate} onChange={(date:Date) => Datesetter(date)} />\n                </Col>\n              </Row>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Control as=\"textarea\" rows={3} placeholder=\"description\" onChange={(event)=> Descriptionsetter(event.target.value)} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={saveButton}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </Row>\n        <Row id=\"todoSidebar-createbutton\">\n          <Button variant=\"primary\" onClick={handleShow}>\n            Create a TODO\n           </Button>    \n        </Row>\n        \n        <Row className=\"todoSidebar-buttons\">\n          <button onClick={()=>toggleSideBar(1)}>\n           <h4>\n            In-Progress\n           </h4> \n           <h4>\n           <Badge bg=\"secondary\">{globalstate.Inprogress.length}</Badge>\n           </h4>\n           </button>\n        </Row>\n        <Row className=\"todoSidebar-buttons\">\n           <button onClick={()=>toggleSideBar(0)}>\n           <h4>\n           Completed  \n           </h4> \n           <h4>\n           <Badge bg=\"secondary\">{globalstate.Completed.length}</Badge>\n           </h4>\n           </button>\n        </Row>\n        <Row style={{height:\"600px\"}}>\n\n        </Row>\n      </div>\n  );\n};","import  {useEffect, useState } from \"react\";\nimport { Col,Row } from 'react-bootstrap';\nimport Badge from 'react-bootstrap/Badge';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../styles/createTodoStyles.css\";\nimport { actionCreators,State } from \"../../state/state\";\n\nexport const StatsTodo = ():JSX.Element => {\n  //REDUX starts here\n\n  const dispatch = useDispatch();\n  const {readTodos} =bindActionCreators(actionCreators,dispatch);\n  const globalstate = useSelector((state:State) => state.todo)\n\n  const getPercentage =():number=> {\n    const percentage = Math.round(globalstate.Completed.length/(globalstate.Completed.length + globalstate.Inprogress.length)*100);\n    if(!(Number.isInteger(percentage)))\n        return 0;\n    else\n        return Math.round(percentage)\n  }\n  useEffect(()=>{\n    readTodos();\n   },[]);\n\n\n  return (\n      <div>\n          <Row className=\"todoStats\">\n                  <Col>\n                      <h1><Badge bg=\"warning\">{globalstate.Inprogress.length}</Badge></h1>\n                      <h5>Ongoing</h5>\n                  </Col>\n                  <Col>\n                      <h1><Badge bg=\"info\"> {globalstate.Completed.length}</Badge></h1>\n                      <h5>Completed</h5>\n                  </Col>\n                  <Col>\n                      <h1><Badge bg=\"secondary\">{globalstate.Completed.length + globalstate.Inprogress.length} </Badge></h1>\n                      <h5>Total</h5>\n                  </Col>\n                  <Col>\n                      <h1><Badge bg=\"success\"> {getPercentage()} %</Badge></h1>\n                      <h5>Progress</h5>\n                  </Col>\n                  \n            </Row>\n      </div>\n  );\n};","import Container from 'react-bootstrap/Container';\nimport {  useEffect, useState } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators,State } from \"../../state/state\";\nimport {  Row } from 'react-bootstrap';\nimport \"../styles/createTodoStyles.css\"\nimport { deleteTodo, doneTodo } from '../../state/action-creators';\nimport { stateInterface, TodoInterface } from \"../../state/interfaces/interfaces\";\n\nexport const ViewTodos =():JSX.Element =>{\n   //REDUX starts here\n  const dispatch = useDispatch();\n  const {deleteTodo,doneTodo} =bindActionCreators(actionCreators,dispatch);\n  const globalstate = useSelector((state:State) => state.todo)\n\n  const [todolist,setTodolist]=useState<stateInterface>({\n    Inprogress:[],\n    Completed:[],\n    selected:1\n  })\n\n\n   useEffect(()=>{\n     setTodolist(globalstate);\n   },[globalstate]);\n\n   if(todolist.selected == 1){\n    return(\n        <Container>\n          <Row>\n        {  \n           globalstate.Inprogress.length > 0 && globalstate.Inprogress.map((Element,index)=>{\n            return (\n                        <div className=\"todoItem\" key={index} >\n                          <div className=\"text\">\n                            <h4>{Element.Title}</h4>\n                            <p>{Element.Description}</p>\n                          </div>     \n                          <button onClick={()=>deleteTodo(index)}>\n                            Delete\n                          </button>\n                          <button onClick={()=>doneTodo(index)}>\n                            Done\n                          </button>\n                        </div>\n            )\n          })\n        }\n          </Row>\n        </Container>\n    )\n  }\n  else{\n    return(\n      <Container>\n        <Row>\n      {  \n         globalstate.Completed.length > 0 && globalstate.Completed.map((Element,index)=>{\n          return (\n                      <div className=\"todoItem\" key={index} >\n                        <div className=\"text\">\n                          <h4>{Element.Title}</h4>\n                          <p>{Element.Description}</p>\n                        </div>     \n                      </div>\n          )\n        })\n      }\n        </Row>\n      </Container>\n  )\n\n  }\n}\n\n\nexport default ViewTodos;","import { Col,Row,Container} from 'react-bootstrap';\nimport { withRouter } from \"react-router-dom\";\nimport NavigationBar from \"../components/navbar/navigationbar\";\nimport {SideBarTodo} from \"../components/todos/sideBarTodo\";\nimport { StatsTodo } from \"../components/todos/StatsTodo\";\nimport ViewTodos from '../components/todos/viewTodo';\n\nfunction Todos():JSX.Element{\n    return(\n        <div>\n            <NavigationBar/>\n            <Container>\n                <Row>\n                    <Col xs={2} className=\"todoSidebar\">\n                        <SideBarTodo/>\n                    </Col>\n                    <Col xs={10}>\n                        <StatsTodo/>\n                        <ViewTodos/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default withRouter(Todos);","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport NavigationBar from \"../components/navbar/navigationbar\";\n\nfunction Notes():JSX.Element {\n    return(\n        <div>\n            <NavigationBar/>\n            <h1>This is Notes Section</h1>\n        </div>\n    )\n}\n\nexport default withRouter(Notes);","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Home  from \"./routes/home\";\nimport Todos  from \"./routes/todos\";\nimport Notes from \"./routes/notes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n        <Route exact path=\"/todos\">\n          <Todos/>\n        </Route>\n        <Route exact path=\"/notes\">\n          <Notes/>\n        </Route>\n        <Route>\n          <Home/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore } from \"redux\";\nimport  reducers   from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n    reducers,\n    {},\n    applyMiddleware(thunk)\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { store } from \"./state/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}